{"version":3,"sources":["webpack:///src/app/layout/emailpanel/emailpanel.component.html","webpack:///src/app/layout/emailpanel/listemail/listemail.component.html","webpack:///src/app/layout/emailpanel/sendemail/sendemail.component.html","webpack:///src/app/layout/emailpanel/email-panel-service.service.ts","webpack:///src/app/layout/emailpanel/emailpanel-routing.module.ts","webpack:///src/app/layout/emailpanel/emailpanel.component.css","webpack:///src/app/layout/emailpanel/emailpanel.component.ts","webpack:///src/app/layout/emailpanel/emailpanel.module.ts","webpack:///src/app/layout/emailpanel/listemail/listemail.component.css","webpack:///src/app/layout/emailpanel/listemail/listemail.component.ts","webpack:///src/app/layout/emailpanel/sendemail/sendemail.component.css","webpack:///src/app/layout/emailpanel/sendemail/sendemail.component.ts"],"names":["EmailPanelServiceService","apiService","get","data","post","providedIn","routes","path","component","breadcrumb","EmailpanelRoutingModule","imports","forChild","exports","EmailpanelComponent","selector","template","EmailpanelModule","declarations","ListemailComponent","service","selectedIds","id","event","target","checked","push","console","log","filter","item","getemailPanel","emaildata","subscribe","res","SendemailComponent","router","route","tost","Recievers","Reciever","Subject","Message","e","createemailPanel","success","navigate"],"mappings":"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","file":"emailpanel-emailpanel-module-es5.js","sourcesContent":["export default \"<p>emailpanel works!</p>\\n\";","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n\\n        <!-- Begin Page Content -->\\n        <div class=\\\"container-fluid\\\">\\n\\n            <!-- Page Heading -->\\n            <div class=\\\"d-sm-flex align-items-center justify-content-between mb-4\\\">\\n                <h1 class=\\\"h3 mb-0 text-gray-800 page-title\\\">List of Email Templates<span>Control Pannel</span></h1>\\n                <ol class=\\\"breadcrumb text-xs bg-transparent\\\">\\n                    <li><i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i><a href=\\\"#\\\" class=\\\"text-gray-700\\\">Home</a><i class=\\\"fas fa-fw fa-angle-right\\\"></i></li>\\n                    <li><a href=\\\"#\\\" class=\\\"text-gray-700\\\">Email Templates</a><i class=\\\"fas fa-fw fa-angle-right\\\"></i></li>\\n                    <li class=\\\"active text-gray-500\\\">List</li>\\n                </ol>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <!-- DataTales Example -->\\n                    <div class=\\\"bg-white shadow border-top-green mb-4\\\">\\n\\n\\n\\n\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"mb-2\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\"><i class=\\\"fa fa-reply-all pr-2\\\" aria-hidden=\\\"true\\\"></i>Back</button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\"><i class=\\\"fa fa-print pr-2\\\" aria-hidden=\\\"true\\\"></i>Print</button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\"><i class=\\\"fa fa-paper-plane pr-2\\\" aria-hidden=\\\"true\\\"></i>Export Excel</button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\"><i class=\\\"fa fa-file-pdf pr-2\\\" aria-hidden=\\\"true\\\"></i>Export Pdf</button>\\n                            </div>\\n                            <hr class=\\\"mp-4 mt-4\\\">\\n                            <div class=\\\"table-responsive mt-4\\\">\\n                                <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th><input type=\\\"checkbox\\\" name=\\\"\\\"></th>\\n                                            <th>Id</th>\\n                                            <th>Sender Id</th>\\n                                            <th>Receiver Email</th>\\n                                            <th>Subject</th>\\n                                            <th>Message</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <!-- <tfoot>\\n                                        <tr>\\n                                            <th><input type=\\\"checkbox\\\" name=\\\"\\\"></th>\\n                                            <th>1</th>\\n                                            <th>Sender Id</th>\\n                                            <th>Receiver Email</th>\\n                                            <th>Subject</th>\\n                                            <th>Message</th>\\n                                        </tr>\\n                                    </tfoot> -->\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let newdata of emaildata\\\">\\n                                            <td><input type=\\\"checkbox\\\" #myItem (change)=\\\"OnCheckboxSelect(newdata.id, $event)\\\" name=\\\"item-{{newdata.id}}\\\"></td>\\n                                            <td>{{newdata.reciver}}</td>\\n                                            <td>{{newdata.senderid}}</td>\\n                                            <td>{{newdata.reciverid}}</td>\\n                                            <td>{{newdata.subject}}</td>\\n                                            <td>{{newdata.message}}</td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n\\n\\n\\n\\n\\n        </div>\\n        <!-- /.container-fluid -->\\n\\n    </div>\\n</div>\";","export default \"<div class=\\\"card\\\">\\n\\n\\n    <div class=\\\"card-body\\\">\\n\\n        <!-- Begin Page Content -->\\n        <div class=\\\"container-fluid\\\">\\n\\n            <!-- Page Heading -->\\n            <div class=\\\"d-sm-flex align-items-center justify-content-between mb-4\\\">\\n                <h1 class=\\\"h3 mb-0 text-gray-800 page-title\\\">Email Template<span>Control Pannel</span></h1>\\n                <ol class=\\\"breadcrumb text-xs bg-transparent\\\">\\n                    <li><i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i><a href=\\\"#\\\" class=\\\"text-gray-700\\\">Home</a><i class=\\\"fas fa-fw fa-angle-right\\\"></i></li>\\n                    <li><a href=\\\"#\\\" class=\\\"text-gray-700\\\">Email Panel</a><i class=\\\"fas fa-fw fa-angle-right\\\"></i></li>\\n                    <li class=\\\"active text-gray-500\\\">Create</li>\\n                </ol>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12 mb-4\\\">\\n\\n                    <!-- Project Card Example -->\\n                    <div class=\\\"card shadow mb-4\\\">\\n                        <div class=\\\"card-header py-3\\\">\\n                            <h6 class=\\\"m-0\\\">New Email</h6>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <form class=\\\"user\\\">\\n\\n                                <div class=\\\"form-group mt-4\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Select Reciever {{Reciever}}</label></div>\\n                                        <div class=\\\"col-lg-10 \\\">\\n                                            <select class=\\\"form-control form-control-user\\\" name=\\\"reciever\\\" [(ngModel)]=\\\"Reciever\\\" (change)=\\\"getReciever($event.target.value)\\\">\\n                              <option *ngFor=\\\"let ln of Recievers\\\" [value]=\\\"ln.id\\\"> {{ln.name}}</option>\\n                          </select>{{Reciever1}}\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Subject{{Subject}}</label></div>\\n                                        <div class=\\\"col-lg-10\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control form-control-user\\\" name=\\\"subject\\\" [(ngModel)]=\\\"Subject\\\" />\\n\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Message</label></div>\\n                                        <div class=\\\"col-lg-10\\\">\\n                                            <textarea class=\\\"form-control\\\" style=\\\"height: 200px;\\\" name=\\\"message\\\" [(ngModel)]=\\\"Message\\\"></textarea>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <hr class=\\\"mp-4 mt-4\\\" />\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-lg-12 text-right\\\">\\n                                        <button type=\\\"button\\\" (click)=\\\"onReset()\\\" class=\\\"btn btn-info btn-sm\\\">Reset</button>\\n                                        <button type=\\\"button\\\" (click)=\\\"onSend()\\\" class=\\\"btn btn-success btn-sm\\\">Send</button>\\n                                    </div>\\n                                </div>\\n\\n                            </form>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n\\n\\n\\n\\n\\n        </div>\\n        <!-- /.container-fluid -->\\n\\n    </div>\\n\\n</div>\";","import { Injectable } from '@angular/core';\nimport { environment as env } from \"../../../environments/environment\";\nimport { ApiService } from '../../shared';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailPanelServiceService {\n\n  constructor(private apiService: ApiService) { }\n  getemailPanel() {\n    return this.apiService.get(`/emailPanel`);\n  }\n\n  createemailPanel(data) {\n    return this.apiService.post(`/emailPanel`, data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EmailpanelComponent } from './emailpanel.component';\nimport { SendemailComponent } from \"./sendemail/sendemail.component\";\nimport { ListemailComponent } from \"./listemail/listemail.component\";\n\nconst routes: Routes = [\n  { path: '', component: EmailpanelComponent },\n  { path: 'send-email',\n  data: {\n    breadcrumb: 'Send Email'\n   },\n  component: SendemailComponent },\n  { path: 'list-email', \n  data: {\n    breadcrumb: 'Email List'\n  },\n  component: ListemailComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmailpanelRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9lbWFpbHBhbmVsL2VtYWlscGFuZWwuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-emailpanel',\n  templateUrl: './emailpanel.component.html',\n  styleUrls: ['./emailpanel.component.css']\n})\nexport class EmailpanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmailpanelRoutingModule } from './emailpanel-routing.module';\nimport { EmailpanelComponent } from './emailpanel.component';\nimport { SendemailComponent } from './sendemail/sendemail.component';\nimport { ListemailComponent } from './listemail/listemail.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [EmailpanelComponent, SendemailComponent, ListemailComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    EmailpanelRoutingModule\n  ]\n})\nexport class EmailpanelModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9lbWFpbHBhbmVsL2xpc3RlbWFpbC9saXN0ZW1haWwuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChildren } from '@angular/core';\nimport {EmailPanelServiceService  } from '../email-panel-service.service';\n@Component({\n  selector: 'app-listemail',\n  templateUrl: './listemail.component.html',\n  styleUrls: ['./listemail.component.css']\n})\nexport class ListemailComponent implements OnInit {\n  emaildata:any;\n  constructor(\n    public service: EmailPanelServiceService\n  ) { }\n  \n  \n  @ViewChildren('myItem') item;\nselectedIds = [];\n\n  OnCheckboxSelect(id, event) {\n    if (event.target.checked === true) {\n      this.selectedIds.push({id: id, checked: event.target.checked});\n      console.log('Selected Ids ', this.selectedIds);\n    }\n    if (event.target.checked === false) {\n      this.selectedIds = this.selectedIds.filter((item) => item.id !== id);\n      console.log('UnSelected Ids ', this.selectedIds);\n    }\n  }\n\n\n  ngOnInit(): void {\n    this.getemailPanel();\n    this.emaildata = [\n      {\"id\":\"1\", \"senderid\":\"text@gmail.com\",\"reciverid\":\"test@gmail.com\", \"subject\":\"Test Mail\",\"message\":\"testing 123\"},\n      {\"id\":\"2\", \"senderid\":\"text1@gmail.com\",\"reciverid\":\"test1@gmail.com\", \"subject\":\"Test Mail2\",\"message\":\"testing 1234\"},\n    ]\n    \n  }\n  getemailPanel(){\n    this.service.getemailPanel().subscribe(\n      res => {\n        console.log(res)\n\n        this.emaildata = res['emailPanel'];\n        // this.disableSubmit = false;\n         \n      }, () => {\n        //this.disableSubmit = false;\n      });\n  }\n\n\n}\n","export default \".text-right button {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2VtYWlscGFuZWwvc2VuZGVtYWlsL3NlbmRlbWFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2VtYWlscGFuZWwvc2VuZGVtYWlsL3NlbmRlbWFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRleHQtcmlnaHQgYnV0dG9uIHtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { AnimateChildOptions } from '@angular/animations';\nimport { EmailPanelServiceService } from '../email-panel-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-sendemail',\n  templateUrl: './sendemail.component.html',\n  styleUrls: ['./sendemail.component.css']\n})\nexport class SendemailComponent implements OnInit {\n\n  Recievers:any = [\n    {'id':'1','name':\"English\"},\n    {'id':'2', 'name':\"Hindi\"},\n    {'id':'3', 'name':\"Urdu\"},\n    {'id':'4', 'name':\"Franch\"}\n    ];\n\n\n    Reciever:any=\"string\";\n    Subject:any=\"\";\n    Message:any=\"\";\n\n  constructor(\n    private service: EmailPanelServiceService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private tost: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.Recievers =  [\n      {'id':'1','name':\"English\"},\n      {'id':'2', 'name':\"Hindi\"},\n      {'id':'3', 'name':\"Urdu\"},\n      {'id':'4', 'name':\"Franch\"}\n      ];\n      \n  }\n  getReciever(e){\n    console.log(e)\n    this.Reciever = e;\n   } \n\n\n   onSend(){\n     console.log(this.Reciever);\n     console.log(this.Subject);\n     console.log(this.Message);\n\n     let data = {\n      \"reciver\" : this.Reciever,\n      \"subject\" : this.Subject,\n      \"message\" : this.Message,\n      \"senderid\":\"text@gmail.com\",\n      \"reciverid\":\"test@gmail.com\",\n     }\n     console.log(data);\n     this.service.createemailPanel(data).subscribe(\n      res => {\n        console.log(res)\n        // this.disableSubmit = false;\n         this.tost.success(\"EmailPanel created succesfully\");\n         this.router.navigate(['/email-panel/list-email']);\n      }, () => {\n        //this.disableSubmit = false;\n      });\n  }\n   \n\n   onReset(){\n    this.Reciever = \"\";\n    this.Subject = \"\";\n    this.Message = \"\";\n   }\n \n\n}\n\n\n"]}
{"version":3,"sources":["webpack:///src/app/layout/payments/newpayments/newpayments.component.html","webpack:///src/app/layout/payments/paymentlist/paymentlist.component.html","webpack:///src/app/layout/payments/payments.component.html","webpack:///src/app/layout/payments/newpayments/newpayments.component.css","webpack:///src/app/layout/payments/newpayments/newpayments.component.ts","webpack:///src/app/layout/payments/payment-service.service.ts","webpack:///src/app/layout/payments/paymentlist/paymentlist.component.css","webpack:///src/app/layout/payments/paymentlist/paymentlist.component.ts","webpack:///src/app/layout/payments/payments-routing.module.ts","webpack:///src/app/layout/payments/payments.component.css","webpack:///src/app/layout/payments/payments.component.ts","webpack:///src/app/layout/payments/payments.module.ts"],"names":["NewpaymentsComponent","service","router","route","tost","date","Teller","Customers","CustomerAccounts","Loans","e","console","log","Customer","CustomerAccount","Loan","Account","AmounttoPay","Remarks","data","createPayment","subscribe","res","success","navigate","selector","template","PaymentServiceService","apiService","get","post","providedIn","PaymentlistComponent","selectedIds","id","event","target","checked","push","filter","item","getPayment","Paymentdata","routes","path","component","breadcrumb","PaymentsRoutingModule","imports","forChild","exports","PaymentsComponent","PaymentsModule","declarations"],"mappings":"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","file":"payments-payments-module-es5.js","sourcesContent":["export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n\\n        <!-- Begin Page Content -->\\n        <div class=\\\"container-fluid\\\">\\n\\n            <!-- Page Heading -->\\n            <div class=\\\"d-sm-flex align-items-center justify-content-between mb-4\\\">\\n                <h1 class=\\\"h3 mb-0 text-gray-800 page-title\\\">New Payments<span>Control Pannel</span></h1>\\n                <ol class=\\\"breadcrumb text-xs bg-transparent\\\">\\n                    <li><i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i><a href=\\\"#\\\" class=\\\"text-gray-700\\\">Home</a><i class=\\\"fas fa-fw fa-angle-right\\\"></i></li>\\n                    <li><a href=\\\"#\\\" class=\\\"text-gray-700\\\">Payment</a><i class=\\\"fas fa-fw fa-angle-right\\\"></i></li>\\n                    <li class=\\\"active text-gray-500\\\">Add</li>\\n                </ol>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12 mb-4\\\">\\n\\n                    <!-- Project Card Example -->\\n                    <div class=\\\"card shadow mb-4\\\">\\n                        <div class=\\\"card-header py-3\\\">\\n\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <form class=\\\"user\\\">\\n\\n\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Account#</label></div>\\n                                        <div class=\\\"col-lg-10\\\">\\n                                            <input type=\\\"text\\\" name=\\\"Account\\\" [(ngModel)]=\\\"Account\\\" placeholder=\\\"Account\\\" class=\\\"form-control form-control-user\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group mt-4\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Customer</label></div>\\n                                        <div class=\\\"col-lg-10 \\\">\\n                                            <select class=\\\"form-control form-control-user\\\" name=\\\"Customer\\\" [(ngModel)]=\\\"Customer\\\" (change)=\\\"getCustomer($event.target.value)\\\">\\n                                      <option *ngFor=\\\"let ln of Customers\\\" [value]=\\\"ln.id\\\">{{ln.name}}</option>\\n                                  </select>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Customer Account#</label></div>\\n                                        <div class=\\\"col-lg-10 \\\">\\n                                            <select class=\\\"form-control form-control-user\\\" name=\\\"CustomerAccount\\\" [(ngModel)]=\\\"CustomerAccount\\\" (change)=\\\"getCustomerAccount($event.target.value)\\\">\\n                                      <option *ngFor=\\\"let ln of CustomerAccounts\\\" [value]=\\\"ln.id\\\">{{ln.account}}</option>\\n                                      \\n                                  </select>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Loan</label></div>\\n                                        <div class=\\\"col-lg-10 \\\">\\n                                            <select class=\\\"form-control form-control-user\\\" name=\\\"Loan\\\" [(ngModel)]=\\\"Loan\\\" (change)=\\\"getLoan($event.target.value)\\\">\\n                                      <option *ngFor=\\\"let ln of  Loans\\\" [value]=\\\"ln.id\\\">{{ln.number}}</option>\\n                                      \\n                                  </select>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Payment Date</label></div>\\n                                        <div class=\\\"col-lg-10\\\">\\n                                            <div class=\\\"input-group\\\">\\n                                                <div class=\\\"input-group-prepend\\\">\\n                                                    <span class=\\\"input-group-text\\\" for=\\\"example\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></span>\\n                                                </div>\\n                                                <input placeholder=\\\"dd-mm-yyyy\\\" name=\\\"PaymentDate\\\" [(ngModel)]=\\\"PaymentDate\\\" type=\\\"text\\\" id=\\\"example\\\" class=\\\"form-control\\\" />\\n\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Amount to Pay</label></div>\\n                                        <div class=\\\"col-lg-10\\\">\\n                                            <input type=\\\"text\\\" name=\\\"AmounttoPay\\\" [(ngModel)]=\\\"AmounttoPay\\\" placeholder=\\\"Amount to Pay\\\" class=\\\"form-control form-control-user\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Teller By</label></div>\\n                                        <div class=\\\"col-lg-10\\\">\\n                                            <input type=\\\"text\\\" name=\\\"TellerBy\\\" [(ngModel)]=\\\"TellerBy\\\" class=\\\"form-control form-control-user\\\" value=\\\"admin\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-2 text-right text-green\\\"><label>Remarks</label></div>\\n                                        <div class=\\\"col-lg-10\\\">\\n                                            <textarea class=\\\"form-control\\\" name=\\\"Remarks\\\" [(ngModel)]=\\\"Remarks\\\" style=\\\"height: 100px;\\\"></textarea>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n\\n                                <hr class=\\\"mp-4 mt-4\\\" />\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-lg-12 text-right\\\">\\n                                        <button type=\\\"button\\\" (click)=\\\"onReset()\\\" class=\\\"btn btn-info btn-sm\\\"><i class=\\\"fa fa-times pr-2\\\" aria-hidden=\\\"true\\\"></i>Reset</button>\\n                                        <button type=\\\"button\\\" (click)=\\\"MakePayment()\\\" class=\\\"btn btn-success btn-sm\\\"><i class=\\\"fa fa-save pr-2\\\" aria-hidden=\\\"true\\\"></i>Make Payment</button>\\n                                    </div>\\n                                </div>\\n\\n                            </form>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n\\n\\n\\n\\n\\n        </div>\\n        <!-- /.container-fluid -->\\n\\n    </div>\\n</div>\";","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n\\n        <!-- Begin Page Content -->\\n        <div class=\\\"container-fluid\\\">\\n\\n            <!-- Page Heading -->\\n            <div class=\\\"d-sm-flex align-items-center justify-content-between mb-4\\\">\\n                <h1 class=\\\"h3 mb-0 text-gray-800 page-title\\\">List of Payments<span>Control Pannel</span></h1>\\n                <ol class=\\\"breadcrumb text-xs bg-transparent\\\">\\n                    <li><i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i><a href=\\\"#\\\" class=\\\"text-gray-700\\\">Home</a><i class=\\\"fas fa-fw fa-angle-right\\\"></i></li>\\n                    <li><a href=\\\"#\\\" class=\\\"text-gray-700\\\">Payment</a><i class=\\\"fas fa-fw fa-angle-right\\\"></i></li>\\n                    <li class=\\\"active text-gray-500\\\">List</li>\\n                </ol>\\n            </div>\\n\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <!-- DataTales Example -->\\n                    <div class=\\\"bg-white shadow border-top-green mb-4\\\">\\n\\n\\n\\n\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"mb-2\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\"><i class=\\\"fa fa-reply-all pr-2\\\" aria-hidden=\\\"true\\\"></i>Back</button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\"><i class=\\\"fa fa-times pr-2\\\" aria-hidden=\\\"true\\\"></i>Delete</button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\"><i class=\\\"fa fa-dollar-sign pr-2\\\" aria-hidden=\\\"true\\\"></i>New Payment</button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"fa fa-print pr-2\\\" aria-hidden=\\\"true\\\"></i>Print Payments</button>\\n\\n                                <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm \\\"><i class=\\\"fa fa-paper-plane pr-2\\\" aria-hidden=\\\"true\\\"></i>Export Excel</button>\\n\\n                            </div>\\n                            <hr class=\\\"mp-4 mt-4\\\">\\n                            <div class=\\\"table-responsive mt-4\\\">\\n                                <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th><input type=\\\"checkbox\\\" name=\\\"\\\"></th>\\n                                            <th>Id</th>\\n                                            <th>Customer</th>\\n                                            <th>Loan</th>\\n                                            <th>Balance</th>\\n                                            <th>Amount to Pay</th>\\n                                            <th>Date</th>\\n                                            <th>Teller</th>\\n                                            <th>Actions</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <!-- <tfoot>\\n                      <tr>\\n                        <th><input type=\\\"checkbox\\\" name=\\\"\\\"></th>\\n                        <th>Id</th>\\n                        <th>Image</th>\\n                        <th>First Name</th>\\n                        <th>Last Name</th>\\n                        <th>Email</th>\\n                        <th>Mobile Number</th>\\n                        <th>Status</th>\\n                        <th>Action</th>\\n                      </tr>\\n                    </tfoot> -->\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let newdata of Paymentdata\\\">\\n                                            <td><input type=\\\"checkbox\\\" #myItem (change)=\\\"OnCheckboxSelect(newdata, $event)\\\" name=\\\"item-{{newdata.id}}\\\"></td>\\n                                            <th>{{newdata._id}}</th>\\n                                            <td>{{newdata.Customer}}</td>\\n                                            <td>{{newdata.Loan}}</td>\\n                                            <td>{{newdata.Balance}}</td>\\n                                            <td>{{newdata.AmounttoPay}}</td>\\n                                            <td>{{newdata.date}}</td>\\n                                            <td>{{newdata.Teller}}</td>\\n                                            <td><button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\"><i class=\\\"fa fa-eye \\\" aria-hidden=\\\"true\\\"></i>\\n                                                {{newdata.Actions}}</button></td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <!-- DataTales Example -->\\n                    <div class=\\\"bg-white shadow  border-top-info mb-4\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <button class=\\\"btn btn-primary btn-info text-uppercase btn-block mt-3\\\">Number of Loan Aplicants 1</button>\\n                        </div>\\n                        <!-- Pie Chart -->\\n                        <div class=\\\"col-xl-12 col-lg-12 mt-4\\\">\\n                            <div class=\\\"card shadow mb-4\\\">\\n                                <!-- Card Header - Dropdown -->\\n\\n                                <!-- Card Body -->\\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"chart-pie pt-4 pb-2\\\">\\n                                        <canvas id=\\\"myPieChart\\\"></canvas>\\n                                    </div>\\n                                    <div class=\\\"mt-4 text-center small\\\">\\n                                        <span class=\\\"mr-2\\\">\\n                        <i class=\\\"fas fa-circle text-primary\\\"></i> Direct\\n                      </span>\\n                                        <span class=\\\"mr-2\\\">\\n                        <i class=\\\"fas fa-circle text-success\\\"></i> Social\\n                      </span>\\n                                        <span class=\\\"mr-2\\\">\\n                        <i class=\\\"fas fa-circle text-info\\\"></i> Referral\\n                      </span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n\\n\\n\\n\\n            </div>\\n            <!-- /.container-fluid -->\\n\\n        </div>\\n        <!-- End of Main Content -->\\n\\n\\n    </div>\\n</div>\";","export default \"<p>payments works!</p>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9wYXltZW50cy9uZXdwYXltZW50cy9uZXdwYXltZW50cy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { AnimateChildOptions } from '@angular/animations';\nimport {PaymentServiceService  } from '../payment-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n@Component({\n  selector: 'app-newpayments',\n  templateUrl: './newpayments.component.html',\n  styleUrls: ['./newpayments.component.css']\n})\nexport class NewpaymentsComponent implements OnInit {\n  Account:any;\n  Customer:any;\n  CustomerAccount:any;\n  Loan:any;\n  date:any=\" \";\n  Teller:any=\" \";\n  Remarks:any;\n  AmounttoPay:any;\n  Customers:any = [\n    {'id':'1','name':\"ravi\"},\n    {'id':'2', 'name':\"reema\"},\n    {'id':'3', 'name':\"rupa\"},\n    {'id':'4', 'name':\"rani\"}\n    ];\n\n    CustomerAccounts:any = [\n      {'id':'1','account':\"445555\"},\n      {'id':'2', 'account':\"333333\"},\n      {'id':'3', 'account':\"677887\"},\n      {'id':'4', 'account':\"23455566\"}\n      ];\n      Loans:any = [\n        {'id':'1','number':\"113322\"},\n        {'id':'2', 'number':\"45544\"},\n        {'id':'3', 'number':\"5665\"},\n        {'id':'4', 'number':\"dfff\"}\n        ];\n  constructor(\n    \n    private service: PaymentServiceService ,\n    private router: Router,\n    private route: ActivatedRoute,\n    private tost: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.Customers = [\n      {'id':'1','name':\"ravi\"},\n      {'id':'2', 'name':\"reema\"},\n      {'id':'3', 'name':\"rupa\"},\n      {'id':'4', 'name':\"rani\"}\n      ];\n\n      this.CustomerAccounts = [\n        {'id':'1','account':\"445555\"},\n        {'id':'2', 'account':\"333333\"},\n        {'id':'3', 'account':\"677887\"},\n        {'id':'4', 'account':\"23455566\"}\n      ];\n\n      this.Loans = [\n        {'id':'1','number':\"113322\"},\n        {'id':'2', 'number':\"45544\"},\n        {'id':'3', 'number':\"5665\"},\n        {'id':'4', 'number':\"dfff\"}\n        ];\n    \n  }\n  getCustomer(e){\n    console.log(e)\n    this.Customer = e;\n   } \n\n   getCustomerAccount(e){\n    console.log(e)\n    this.CustomerAccount = e;\n   } \n\n   getLoan(e){\n    console.log(e)\n    this.Loan = e;\n   } \n\n   \n\n\n   MakePayment(){\n     console.log(this.Account);\n     console.log(this.Customer);\n     console.log(this.CustomerAccount);\n     console.log(this.Loan);\n     console.log(this.date);\n     console.log(this.AmounttoPay);\n     console.log(this.Teller);\n     console.log(this.Remarks);\n\n     let data = {\n       \"Account\":this.Account,\n       \"Customer\":this.Customer,\n       \"CustomerAccount\":this.CustomerAccount,\n       \"Loan\": this.Loan,\n       \"date\":this.date,\n       \"AmounttoPay\":this.AmounttoPay,\n       \"Remarks\":this.Remarks,\n       \"Teller\":this.Teller\n\n     }\n     console.log(data)\n\n     this.service.createPayment(data).subscribe(\n      res => {\n        console.log(res)\n        // this.disableSubmit = false;\n         this.tost.success(\"Payment created succesfully\");\n         this.router.navigate(['/payments/list']);\n      }, () => {\n        //this.disableSubmit = false;\n      });\n\n   \n\n   }\n   onReset(){\n     this.Account=\"\";\n     this.Customer=\"\";\n     this.CustomerAccount=\"\";\n     this.Loan=\"\";\n     this.AmounttoPay=\"\";\n     this.date=\"\";\n     this.Teller=\"\";\n     this.Remarks=\"\";\n   }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment as env } from \"../../../environments/environment\";\nimport { ApiService } from '../../shared';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentServiceService {\n\n  constructor(private apiService: ApiService) { }\n  getPayment() {\n    return this.apiService.get(`/payments`);\n  }\n\n  createPayment(data) {\n    return this.apiService.post(`/payments`, data);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9wYXltZW50cy9wYXltZW50bGlzdC9wYXltZW50bGlzdC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChildren } from '@angular/core';\nimport {PaymentServiceService } from '../payment-service.service';\n\n@Component({\n  selector: 'app-paymentlist',\n  templateUrl: './paymentlist.component.html',\n  styleUrls: ['./paymentlist.component.css']\n})\nexport class PaymentlistComponent implements OnInit {\n  Paymentdata:any;\n  constructor( public service: PaymentServiceService) { }\n  @ViewChildren('myItem') item;\n  selectedIds = [];\n  \n    OnCheckboxSelect(id, event) {\n      if (event.target.checked === true) {\n        this.selectedIds.push({id: id, checked: event.target.checked});\n        console.log('Selected Ids ', this.selectedIds);\n      }\n      if (event.target.checked === false) {\n        this.selectedIds = this.selectedIds.filter((item) => item.id !== id);\n        console.log('UnSelected Ids ', this.selectedIds);\n      }\n    }\n\n  ngOnInit(): void {\n    this.getPayment();\n\n    this.Paymentdata = [\n      {\"id\":\"1\", \"Customer\":\"Ajay\",\"Loan\":\"saving\", \"Balance\":\"400000\",\"AmounttoPay\":\"30000000\",\"date\":\"12/09/2014\",\"Teller\":\"sddd\",\"Actions\":\"view\"},\n      \n    ]\n    \n  }\n\n  getPayment(){\n    this.service.getPayment().subscribe(\n      res => {\n        console.log(res)\n\n        this.Paymentdata = res['payments'];\n        // this.disableSubmit = false;\n         \n      }, () => {\n        //this.disableSubmit = false;\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PaymentsComponent } from './payments.component';\nimport {  NewpaymentsComponent } from './newpayments/newpayments.component';\nimport {  PaymentlistComponent } from './paymentlist/paymentlist.component';\n\nconst routes: Routes = [\n  { path: '', component: PaymentsComponent },\n  { path: 'new',\n  data: {\n    breadcrumb: 'New Payment'\n  },\n  component: NewpaymentsComponent },\n  { path: 'list',\n  data: {\n    breadcrumb: 'Payment List'\n   },\n  component: PaymentlistComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PaymentsRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9wYXltZW50cy9wYXltZW50cy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.css']\n})\nexport class PaymentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PaymentsRoutingModule } from './payments-routing.module';\nimport { PaymentsComponent } from './payments.component';\nimport { NewpaymentsComponent } from './newpayments/newpayments.component';\nimport { PaymentlistComponent } from './paymentlist/paymentlist.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [PaymentsComponent, NewpaymentsComponent, PaymentlistComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PaymentsRoutingModule\n  ]\n})\nexport class PaymentsModule { }\n"]}